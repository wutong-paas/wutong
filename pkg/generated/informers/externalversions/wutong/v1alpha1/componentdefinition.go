// WUTONG, Application Management Platform
// Copyright (C) 2014-2021 Wutong Co., Ltd.

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version. For any non-GPL usage of Wutong,
// one or multiple Commercial Licenses authorized by Wutong Co., Ltd.
// must be obtained first.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"
	time "time"

	wutongv1alpha1 "github.com/wutong-paas/wutong/pkg/apis/wutong/v1alpha1"
	versioned "github.com/wutong-paas/wutong/pkg/generated/clientset/versioned"
	internalinterfaces "github.com/wutong-paas/wutong/pkg/generated/informers/externalversions/internalinterfaces"
	v1alpha1 "github.com/wutong-paas/wutong/pkg/generated/listers/wutong/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	watch "k8s.io/apimachinery/pkg/watch"
	cache "k8s.io/client-go/tools/cache"
)

// ComponentDefinitionInformer provides access to a shared informer and lister for
// ComponentDefinitions.
type ComponentDefinitionInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() v1alpha1.ComponentDefinitionLister
}

type componentDefinitionInformer struct {
	factory          internalinterfaces.SharedInformerFactory
	tweakListOptions internalinterfaces.TweakListOptionsFunc
	namespace        string
}

// NewComponentDefinitionInformer constructs a new informer for ComponentDefinition type.
// Always prefer using an informer factory to get a shared informer instead of getting an independent
// one. This reduces memory footprint and number of connections to the server.
func NewComponentDefinitionInformer(client versioned.Interface, namespace string, resyncPeriod time.Duration, indexers cache.Indexers) cache.SharedIndexInformer {
	return NewFilteredComponentDefinitionInformer(client, namespace, resyncPeriod, indexers, nil)
}

// NewFilteredComponentDefinitionInformer constructs a new informer for ComponentDefinition type.
// Always prefer using an informer factory to get a shared informer instead of getting an independent
// one. This reduces memory footprint and number of connections to the server.
func NewFilteredComponentDefinitionInformer(client versioned.Interface, namespace string, resyncPeriod time.Duration, indexers cache.Indexers, tweakListOptions internalinterfaces.TweakListOptionsFunc) cache.SharedIndexInformer {
	return cache.NewSharedIndexInformer(
		&cache.ListWatch{
			ListFunc: func(options v1.ListOptions) (runtime.Object, error) {
				if tweakListOptions != nil {
					tweakListOptions(&options)
				}
				return client.WutongV1alpha1().ComponentDefinitions(namespace).List(context.TODO(), options)
			},
			WatchFunc: func(options v1.ListOptions) (watch.Interface, error) {
				if tweakListOptions != nil {
					tweakListOptions(&options)
				}
				return client.WutongV1alpha1().ComponentDefinitions(namespace).Watch(context.TODO(), options)
			},
		},
		&wutongv1alpha1.ComponentDefinition{},
		resyncPeriod,
		indexers,
	)
}

func (f *componentDefinitionInformer) defaultInformer(client versioned.Interface, resyncPeriod time.Duration) cache.SharedIndexInformer {
	return NewFilteredComponentDefinitionInformer(client, f.namespace, resyncPeriod, cache.Indexers{cache.NamespaceIndex: cache.MetaNamespaceIndexFunc}, f.tweakListOptions)
}

func (f *componentDefinitionInformer) Informer() cache.SharedIndexInformer {
	return f.factory.InformerFor(&wutongv1alpha1.ComponentDefinition{}, f.defaultInformer)
}

func (f *componentDefinitionInformer) Lister() v1alpha1.ComponentDefinitionLister {
	return v1alpha1.NewComponentDefinitionLister(f.Informer().GetIndexer())
}
